name: Release

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build-wheels: # Updated job name
    strategy:
      fail-fast: false
      matrix:
        include:
          # manylinux
          - os: ubuntu-latest
            python-version: "3.12"
            target: "x86_64-unknown-linux-gnu"
            arch: x86_64
            manylinux: auto

          # macOS ARM64 (for native M2 performance)
          - os: macos-latest
            python-version: "3.12"
            target: "aarch64-apple-darwin"
            arch: aarch64
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.1.4
        with:
          poetry-version: "1.6.1"
      - name: Set up Cargo and Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal
      - name: Build Wheels with Maturin
        run: |
          poetry install
          poetry run poe build
      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist/

  publish:
    environment: pypi
    runs-on: ubuntu-latest
    needs: build-wheels
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
          path: dist/
      - name: Prepare for Publishing
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "Running in test mode - no publish"
          echo "Python Version:"
          python --version

      - name: Publish to PyPI
        # if: github.event_name == 'release'
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          python -m pip install twine 
          twine upload --repository pypi --username __token__ --password "${PYPI_TOKEN}" dist/*.whl
